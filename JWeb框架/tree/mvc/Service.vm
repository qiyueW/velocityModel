#set($mytestDEV='//')
#set($MyStyle='')##是否启用了单据状态
#set($MyStyleName='')##单据状态名
#set($MyStyle_getMethod='')##单据状态-get方法
#set($MyStyle_setMethod='')##单据状态-set方法
#set($MyIsolationName='')##隔离标识
#set($MyIsolation_getMethod='')##隔离标识-get方法
#set($MyIsolation_setMethod='')##隔离标识-set方法
#set($treeMyid='')
#set($treeMyid_getMethod='')
#set($treeMyid_setMethod='')
#set($treeMypid='')
#set($treeMyid_getMethod='')
#set($treeMyid_setMethod='')
#set($treeMyname='')
#set($treeMyname_getMethod='')
#set($treeMyname_setMethod='')
#set($MyImgOne='')
#set($MyFileOne='')
#set($MyImportType_Date='')
#foreach($field in ${fields})
#if($field.c_type=='Date')
#set($MyImportType_Date="import java.util.Date;")
#end
#if(${field.tree}=='id')
#set($treeMyid="${field.c_name}")
#set($treeMyid_getMethod="${field.c_method_get}")
#set($treeMyid_setMethod="${field.c_method_set}")
#elseif(${field.tree}=='pid')
#set($treeMypid="${field.c_name}")
#set($treeMypid_getMethod="${field.c_method_get}")
#set($treeMypid_setMethod="${field.c_method_set}")
#elseif(${field.tree}=='name')
#set($treeMyname="${field.c_name}")
#set($treeMyname_getMethod="${field.c_method_get}")
#set($treeMyname_setMethod="${field.c_method_set}")
#elseif(${field.style}=='true')##是否启用了单据状态
#set($MyStyle='true')##是
#set($MyStyleName="${field.c_name}")
#set($MyStyle_getMethod="${field.c_method_get}")
#set($MyStyle_setMethod="${field.c_method_set}")
#elseif(${field.style}=='isolation')##是否启用隔离标识
#set($MyIsolationName="${field.c_name}")
#set($MyIsolation_getMethod="${field.c_method_get}")
#set($MyIsolation_setMethod="${field.c_method_set}")
#elseif($field.h_type=='img')##是否有图片上传
#set($MyImgOne='true')##是
#elseif($field.h_type=='file')##是否有文件上传
#set($MyFileOne='true')##是
#end
#end
package ${bean.package_service};

import configuration.mvc.BaseService;
import configuration.DBO;
import configuration.MsgVO;
import java.util.List;
${MyImportType_Date}
#if($MyFileOne!=''||$MyImgOne!='')
import javax.servlet.http.HttpServletRequest;
import system.web.file.FI;
import system.web.file.engine.FileEngine;
#end
import ${bean.package_bean}.${bean.name_bean};

/**
 *
 * @author wo
 */
final public class ${bean.name_service} {
#if($MyStyleName!='')
    private static final String TABLE1 = "${bean.name_bean}";
    private static final String PK1 = "${treeMyid}";
    private static final String STYLE1 = "${MyStyleName}";
#end
#if($MyIsolationName!='')
    private static final String GE_LI_BIAO_SHI = "${MyIsolationName}";
#end
//---------------------------------------查询---------------------------------------

    /**
     * 检出树
     *
     * @return List
     */
    public static List<${bean.name_bean}> select() {
        return DBO.service.S.select(${bean.name_bean}.class);
    }
    /**
     * 检出树
     *
     * @param condition
     * @return List
     */
    public static List<${bean.name_bean}> select(String condition) {
        return DBO.service.S.selectByCondition(${bean.name_bean}.class, condition);
    }
    /**
     * 检出一条记录
     *
     * @param id
     * @return ${bean.name_bean}
     */
    public static ${bean.name_bean} selectOne(String id) {
        return DBO.service.S.selectOneByID(${bean.name_bean}.class, id);
    }
//---------------------------------------增删改--------------------------------------

    /**
     * 添加数据
     *
     * @param obj
     * @return
     */
    public static MsgVO addOne(${bean.name_bean} obj) {
#if($MyStyleName!='')
        obj.${MyStyle_setMethod}(0);
#end
#set($MyUniqueStr='')
#set($MyUniqueStrName='')
#set($MyUniqueStrCount='1')
#foreach($field in $fields)
#if($field.t_isnull!='NULL'&&$field.v_check=='')##不能为空，但没有进行检查的，锁定给它初始值
#if($field.c_type=='Date')##-针对时间类
        obj.${field.c_method_set}(new Date());
#end
#end
#if($field.t_index=='UNIQUE INDEX'&&$field.h_hidden!='true')##唯一的，但非主键类的
#if($MyUniqueStrCount=='1')
#set($MyUniqueStrCount='2')
#set($MyUniqueStr=",""$field.c_name""")
#set($MyUniqueStrName="$field.c_remarks")
#else
#set($MyUniqueStr=$MyUniqueStr+",""$field.c_name""")
#set($MyUniqueStrName=$MyUniqueStrName+",$field.c_remarks")
#end
#end
#end
        int i = DBO.service.A.addOne(obj${MyUniqueStr});
#if($MyUniqueStr!='')
        if(i==-1){
            return MsgVO.setError("添加异常：请检查这些字段(${MyUniqueStrName})是否唯一");
        }
#end
        return MsgVO.setAddRS(i);
    }

    /**
     * 删除指定数据。-1表示 不是未级，不能删除。
     *
     * @param id
     * @return
     */
    public static MsgVO dellOne(String id) {
        ${bean.name_bean} cobj = selectOne(id);
#if($MyStyleName!='')
        if (null == cobj||null==cobj.${treeMyid_getMethod}()||cobj.${MyStyle_getMethod}() != BaseService.XINZENG) {
            return MsgVO.setError("没找到该记录。请刷新后再尝试");
        }
#else
        if (null == cobj||null==cobj.${treeMyid_getMethod}()) {
            return MsgVO.setError("没找到该记录。请刷新后再尝试");
        }        
#end
        List<${bean.name_bean}> list = select();
        for (${bean.name_bean} fl : list) {
            if (fl.${treeMypid_getMethod}().equals(id)) {//表示删除的对象，存在子级。
                return MsgVO.setError("删除的对象存在子级");
            }
        }
#if($MyStyleName!='')
        int i = DBO.service.D.deleteOneByID_CheckToDeny(${bean.name_bean}.class, id, "${MyStyleName}<>0");
        if (i == -1) {
            return MsgVO.setError("单据锁定，无法删除");
        }
#else
        int i = DBO.service.D.dellByID(${bean.name_bean}.class, id);
#end
        return MsgVO.setDellRS(i);
    }

    /**
     * 修改对象（reject字段的不进行修改）
     *
     * @param obj
     * @return
     */
    public static MsgVO update(${bean.name_bean} obj) {

#set($MyRejectStr='')##name，
#set($MyRejectStrValue='')##value
#set($MyRejectStrCount='1')
#foreach($field in $fields)
#if($field.h_hidden!='true'&&$field.v_check=='')##不是主键，没指定是否检验的。统一过滤。
#if($MyRejectStrCount=='1')
#set($MyRejectStrCount='2')
#set($MyRejectStr="$field.c_name")
#set($MyRejectStrValue="$field.c_remarks")
#else
#set($MyRejectStr=$MyRejectStr+",$field.c_name")
#set($MyRejectStrValue=$MyRejectStrValue+",$field.c_remarks")
#end
#end
#end
#if($MyIsolationName!='')
#if($MyRejectStr!='')
#set($MyRejectStrValue="隔离标识,$MyRejectStrValue")
#set($MyRejectStr="$MyIsolationName,$MyRejectStr")
#else
#set($MyRejectStrValue="隔离标识")
#set($MyRejectStr="$MyIsolationName")
#end
#end
#if($MyStyleName!=''||$MyRejectStr!='')
#if($MyStyleName!='')
        if (selectOne(obj.${treeMyid_getMethod}()).${MyStyle_getMethod}() != BaseService.XINZENG) {
            return MsgVO.setError();
        }
#end
        return MsgVO.setUpdateRS(DBO.service.U.updateSome_reject(obj,
        //${MyStyleName}#if($MyStyleName!=''&&$MyRejectStr!=''),#end${MyRejectStrValue}
                "${MyStyleName}#if($MyStyleName!=''&&$MyRejectStr!=''),#end${MyRejectStr}"));
#else
        return MsgVO.setUpdateRS(DBO.service.U.update_notNull(obj));
#end
    }
#if($MyStyleName!='')    
//---------------------------------------单据状态管理---------------------------------------

    /**
     * 审核
     *
     * @param ids
     * @return
     */
    public static MsgVO updateStyle_examine(String ids) {
        return BaseService.updateStyle_examine(ids, TABLE1, PK1, STYLE1);
    }

    /**
     * 反审核
     *
     * @param ids
     * @return
     */
    public static MsgVO updateStyle_unExamine(String ids) {
        return BaseService.updateStyle_unExamine(ids, TABLE1, PK1, STYLE1);
    }

    /**
     * 作废
     *
     * @param ids
     * @return
     */
    public static MsgVO updateStyle_void(String ids) {
        return BaseService.updateStyle_void(ids, TABLE1, PK1, STYLE1);
    }

    /**
     * 反作废
     *
     * @param ids
     * @return
     */
    public static MsgVO updateStyle_unVoid(String ids) {
        return BaseService.updateStyle_unVoid(ids,  TABLE1, PK1, STYLE1);
    }
    
#end
#if($MyIsolationName!='')
//---------------------------------------隔离标识管理--------------------------------------
    public static boolean isErrorGelibiaoshiVast(String ids, String gelibiaoshi) {
        List<${bean.name_bean}> list = DBO.service.S.selectByCondition(${bean.name_bean}.class, "WHERE ${treeMyid} IN(" + configuration.Tool.replaceDToDDD(ids) + ")");
        return BaseService.isErrorGelibiaoshiVast(list, GE_LI_BIAO_SHI, gelibiaoshi);
    }
    public static boolean isErrorGelibiaoshiVast(List<${bean.name_bean}> list, String gelibiaoshi) {
        return BaseService.isErrorGelibiaoshiVast(list, GE_LI_BIAO_SHI, gelibiaoshi);
    }
    public static boolean isErrorGelibiaoshiOne(String id, String gelibiaoshi) {
        ${bean.name_bean} obj = DBO.service.S.selectOneByID(${bean.name_bean}.class, id);
        return BaseService.isErrorGelibiaoshiOne(obj, GE_LI_BIAO_SHI, gelibiaoshi);
    }
    public static boolean isErrorGelibiaoshiOne(${bean.name_bean} obj, String gelibiaoshi) {
        return BaseService.isErrorGelibiaoshiOne(obj, GE_LI_BIAO_SHI, gelibiaoshi);
    }

#end
#if($MyFileOne!=''||$MyImgOne!='')
//---------------------------------------文件图片管理---------------------------------------
#if($MyImgOne!='')
    /**
     * 上传图片
     *
     * @param reqeust
     * @return FI
     */
    public static FI upOneImg(HttpServletRequest reqeust) {
        FileEngine file = new FileEngine(reqeust);
        FI upOne = file.upOne(configuration.file.ImgFileModel.class);//可以自己写一个Model
        return upOne;
    }
#end
#if($MyFileOne!='')
    /**
     * 上传文件
     *
     * @param reqeust
     * @return FI
     */
    public static FI upOneFile(HttpServletRequest reqeust) {
        FileEngine file = new FileEngine(reqeust);
        FI upOne = file.upOne(configuration.file.OfficeFileModel.class);//可以自己写一个Model 系统默认office系列小部分
        return upOne;
    }
#end
#end
}
