#set($mytestDEV='//')
#set($DYH='''')
#set($MyStyle='')##是否启用了单据状态
#set($MyStyleName='')##单据状态名
#set($MyStyle_getMethod='')##单据状态-get方法
#set($MyStyle_setMethod='')##单据状态-set方法
#set($MyPXName='')##排序
#set($MyPX_getMethod='')##排序-get方法
#set($MyPX_setMethod='')##排序-set方法
#set($myid='')##1方主键
#set($myid_getMethod='')
#set($myid_setMethod='')
#set($myid2='')##多方主键
#set($myid2_getMethod='')
#set($myid2_setMethod='')
#set($MyImgOne='')
#set($MyFileOne='')
#set($MyImportType_Date='')
#foreach($field in ${fields})
#if($field.c_type=='Date')
#set($MyImportType_Date="import java.util.Date;")
#end
#if(${field.t_index}=='PRIMARY KEY')
#set($myid="${field.c_name}")
#set($myid_getMethod="${field.c_method_get}")
#set($myid_setMethod="${field.c_method_set}")
#elseif(${field.style}=='true')##是否启用了单据状态
#set($MyStyle='true')##是
#set($MyStyleName="${field.c_name}")
#set($MyStyle_getMethod="${field.c_method_get}")
#set($MyStyle_setMethod="${field.c_method_set}")
#elseif(${field.style}=='px')##是否启用排序
#set($MyPXName="${field.c_name}")
#set($MyPX_getMethod="${field.c_method_get}")
#set($MyPX_setMethod="${field.c_method_set}")
#elseif($field.h_type=='img')##是否有图片上传
#set($MyImgOne='true')##是
#elseif($field.h_type=='file')##是否有文件上传
#set($MyFileOne='true')##是
#end
#end
#foreach($field in ${fields1})
#if(${field.t_index}=='PRIMARY KEY')
#set($myid2="${field.c_name}")
#set($myid2_getMethod="${field.c_method_get}")
#set($myid2_setMethod="${field.c_method_set}")
#end
#end
package ${bean.package_service};

import configuration.mvc.BaseService;
import configuration.DBO;
import configuration.MsgVO;
import configuration.Tool;
import java.util.List;
${MyImportType_Date}
#if($MyFileOne!=''||$MyImgOne!='')
import javax.servlet.http.HttpServletRequest;
import system.web.file.FI;
import system.web.file.engine.FileEngine;
#end
import ${bean.package_bean}.${bean.name_bean};
import ${bean1.package_bean}.${bean1.name_bean};

/**
 *
 * @author wangchunzi
 */
final public class ${bean.name_service} {
    private static final String TABLE1 = "${bean.name_bean}";
    private static final String PK1 = "${myid}";
    private static final String STYLE1 = "${MyStyleName}";
    
//---------------------------------------查询---------------------------------------
    /**
     * 检出一条记录(表头)
     *
     * @param id 表头主键
     * @return ${bean.name_bean}
     */
    public static ${bean.name_bean} selectOne(String id) {
        return DBO.service.S.selectOneByID(${bean.name_bean}.class, id);
    }

    /**
     * 检出一条记录(表体)
     *
     * @param id 表体主键
     * @return ${bean1.name_bean}
     */
    public static ${bean1.name_bean} selectOne2(String id) {
        return DBO.service.S.selectOneByID(${bean1.name_bean}.class, id);
    }

    /**
     * 检出表头数据
     *
     * @param page 页码
     * @param size 多少页
     * @param where 条件
     * @param ordery 排序
     * @return List 表头集合
     */
    public static List<${bean.name_bean}> select(final int page, final int size, final String where, final String ordery) {
        return DBO.service.S.selectVastByCondition(${bean.name_bean}.class, page, size, null == where ? "" : where, null == ordery ? "" : ordery);
    }

    /**
     * 检出表体数据 根据表头主键
     *
     * @param pid 表头的主键
     * @return List
     */
    public static List<${bean1.name_bean}> select2(String pid) {
        return DBO.service.S.selectByCondition(${bean1.name_bean}.class, "WHERE "+PK1+" IN('" + pid + "')");
    }
//---------------------------------------统计区--------------------------------------
    /**
     * 统计表头数据(条件为null或为空时，表示统计整张表)
     *
     * @param where 条件
     * @return int
     */
    public static int selectCount(final String where) {
        return null == where || where.isEmpty() ? DBO.service.S.selectCount(${bean.name_bean}.class) : DBO.service.S.selectCountByCondition(${bean.name_bean}.class, where);
    }    
//---------------------------------------增删改--------------------------------------
    /**
     * 添加数据
     *
     * @param obj 1方
     * @param list 多方
     * @return MsgVO
     */
    public static MsgVO addOne(${bean.name_bean}  obj, List<${bean1.name_bean} > list) {
#set($myUiqueName='')##name，
#set($myUiqueValue='')##value
#set($myUiqueCount='1')    
#foreach($field in ${fields})
#if($field.t_index=='UNIQUE INDEX')##针对唯一的字段
#if($myUiqueCount=='1')
#set($myUiqueCount='2')
#set($myUiqueName="$field.c_name=$DYH""+obj.${field.c_method_get}()+""$DYH")
#set($myUiqueValue="$field.c_remarks")
#else
#set($myUiqueName=$myUiqueName+" OR $field.c_name=$DYH""+obj.${field.c_method_get}()+""$DYH")
#set($myUiqueValue=$myUiqueValue+",$field.c_remarks")
#end
#end
#end
#set($myUiqueCount1='1')
#foreach($field in ${fields1})##针对表体
#if($field.t_index=='UNIQUE INDEX')##针对唯一的字段
#if($myUiqueCount1=='1')
#set($myUiqueCount1='2')
        plugins.Table<${bean1.name_bean}> table = new plugins.Table(list);
        if(!table.isUnique("$field.c_name")){
            return MsgVO.setError("添加异常,表体${field.c_remarks}不唯一，请调整后再试");
        }
#else
        if(!table.isUnique("$field.c_name")){
            return MsgVO.setError("添加异常,表体${field.c_remarks}不唯一，请调整后再试");
        }
#end
#end
#end
#if($myUiqueCount=='2')
        if (DBO.service.S.selectCountByCondition(${bean.name_bean} .class, "WHERE ${myUiqueName}") > 0) {
            return MsgVO.setError("添加异常,${myUiqueValue}当中，存有不唯一的。请调整后再试");
        }
#end
#if($MyStyleName!='')
        obj.${MyStyle_setMethod}(0);
#end
#if($MyPXName!='')
        int px = DBO.service.S.selectCount(${bean.name_bean}.class);
        obj.${MyPX_setMethod}(px);
#end
#foreach($field in $fields)
#if($field.t_isnull!='NULL'&&$field.v_check=='')##不能为空，但没有进行检查的，锁定给它初始值
#if($field.c_type=='Date')##-针对服务端自动生成的时间类
        obj.${field.c_method_set}(new Date());//${field.c_remarks}
#end
#end
#end

        int[] i = DBO.service.A.add_OM(obj, list);
        if (null == i) {
            return MsgVO.setError("添加异常,请通知管理检查后台数据库连接是否异常。");
        }
        return MsgVO.setAddRS(i[0]);
    }
    /**
     * 删除指定数据。
     *
     * @param ids
     * @return
     */
    public static MsgVO dellVast(String ids) {
#if($MyStyleName!='')
        if (DBO.service.S.selectCountByCondition(${bean.name_bean}.class, "WHERE ${MyStyleName}<>0 AND ${myid} IN(" + Tool.replaceDToDDD(ids) + ")") > 0) {
            return MsgVO.setError("选择的单据中存在锁定的单据，无法删除");
        }
#end
        return MsgVO.setDellRS(DBO.service.D.ooDelete(ids, ${bean.name_bean}.class, ${bean1.name_bean}.class));
    }
    /**
     * 修改 一条记录（一个表头，多个表体。即一对多表）<br>
     * 本方法采用删除旧表体的方法，强烈建议反审核时，此单一定是没有其他引用才可以反审，反审后才能修改。<br>
     * 否则，如果其他单据有引用表体的id的话，此单某部分数据结构就会失去关联
     *
     * @param obj 表头对象
     * @param list 表体集合
     * @return MsgVO
     */
    public static MsgVO update(${bean.name_bean} obj, List<${bean1.name_bean}> list) {
        if (null == obj.${myid_getMethod}() || obj.${myid_getMethod}().length() != 24) {
            return MsgVO.setError("修改异常,表头信息丢失，请退出修改界面后，重新操作");
        }    
#set($myUiqueName='')##name，
#set($myUiqueValue='')##value
#set($myUiqueCount='1')    
#foreach($field in ${fields})##针对表头
#if($field.t_index=='UNIQUE INDEX')##针对唯一的字段
#if($myUiqueCount=='1')
#set($myUiqueCount='2')
#set($myUiqueName="${myid}<>$DYH""+obj.${myid_getMethod}()+""$DYH")##主键<>'"+值+"'
#set($myUiqueName=$myUiqueName+" AND ($field.c_name=$DYH""+obj.${field.c_method_get}()+""$DYH")
#set($myUiqueValue="$field.c_remarks")
#else
#set($myUiqueName=$myUiqueName+" OR $field.c_name=$DYH""+obj.${field.c_method_get}()+""$DYH")
#set($myUiqueValue=$myUiqueValue+",$field.c_remarks")
#end
#end
#end    
#set($myUiqueCount1='1')
#foreach($field in ${fields1})##针对表体
#if($field.t_index=='UNIQUE INDEX')##针对唯一的字段
#if($myUiqueCount1=='1')
#set($myUiqueCount1='2')
        plugins.Table<${bean1.name_bean}> table = new plugins.Table(list);
        if(!table.isUnique("$field.c_name")){
            return MsgVO.setError("修改异常,表体${field.c_remarks}不唯一，请调整后再试");
        }
#else
        if(!table.isUnique("$field.c_name")){
            return MsgVO.setError("修改异常,表体${field.c_remarks}不唯一，请调整后再试");
        }
#end
#end
#end
#if($myUiqueCount=='2')
        if (DBO.service.S.selectCountByCondition(${bean.name_bean} .class, "WHERE ${myUiqueName})") > 0) {
            return MsgVO.setError("修改异常,${myUiqueValue}当中，存有不唯一的。请调整后再试");
        }
#end
#if($MyStyleName!='')
        if (selectOne(obj.${myid_getMethod}()).${MyStyle_getMethod}() != BaseService.XINZENG) {
            return MsgVO.setError();
        }
#end
#set($MyRejectStr='')##name，
#set($MyRejectStrValue='')##value
#set($MyRejectStrCount='1')
#foreach($field in $fields)
#if($field.h_hidden!='true'&&$field.v_check=='')##不是主键，没指定是否检验的。统一过滤。
#if($MyRejectStrCount=='1')
#set($MyRejectStrCount='2')
#set($MyRejectStr="$field.c_name")
#set($MyRejectStrValue="$field.c_remarks")
#else
#set($MyRejectStr=$MyRejectStr+",$field.c_name")
#set($MyRejectStrValue=$MyRejectStrValue+",$field.c_remarks")
#end
#end
#end
        int[] i = DBO.service.ADUS.executeBatch(
#if($MyStyleName!=''||$MyRejectStr!='')
                //${MyStyleName}#if($MyStyleName!=''&&$MyRejectStr!=''),#end${MyRejectStrValue}
                DBO.service.SQL.updateSome_reject(obj, "${MyStyleName}#if($MyStyleName!=''&&$MyRejectStr!=''),#end${MyRejectStr}")//修改表头的数据,排序字段不进行修改
#else
                DBO.service.SQL.update_notNull(obj)
#end
                ,
                 DBO.service.SQL.dellByCondition(${bean1.name_bean}.class, "WHERE ${myid}='" + obj.${myid_getMethod}() + "'")//清空旧表体的值
                ,
                 DBO.service.SQL.addVast(list)//加入新表体的值
        );
        if(null==i){
            return MsgVO.setError("修改操作异常。请通知管理查询服务器日志");
        }
        return MsgVO.setUpdateRS(i[0]);
    }

#if($MyStyleName!='')    
//---------------------------------------单据状态管理---------------------------------------

    /**
     * 审核
     *
     * @param ids
     * @return
     */
    public static MsgVO updateStyle_examine(String ids) {
        return BaseService.updateStyle_examine(ids, TABLE1, PK1, STYLE1);
    }

    /**
     * 反审核
     *
     * @param ids
     * @return
     */
    public static MsgVO updateStyle_unExamine(String ids) {
        return BaseService.updateStyle_unExamine(ids,  TABLE1, PK1, STYLE1);
    }

    /**
     * 作废
     *
     * @param ids
     * @return
     */
    public static MsgVO updateStyle_void(String ids) {
        return BaseService.updateStyle_void(ids,  TABLE1, PK1, STYLE1);
    }

    /**
     * 反作废
     *
     * @param ids
     * @return
     */
    public static MsgVO updateStyle_unVoid(String ids) {
        return BaseService.updateStyle_unVoid(ids, TABLE1, PK1, STYLE1);
    }
#end
#if($MyFileOne!=''||$MyImgOne!='')
//---------------------------------------文件图片管理---------------------------------------
#if($MyImgOne!='')
    /**
     * 上传图片
     *
     * @param reqeust
     * @return FI
     */
    public static FI upOneImg(HttpServletRequest reqeust) {
        FileEngine file = new FileEngine(reqeust);
        FI upOne = file.upOne(configuration.file.ImgFileModel.class);//可以自己写一个Model
        return upOne;
    }
#end
#if($MyFileOne!='')
    /**
     * 上传文件
     *
     * @param reqeust
     * @return FI
     */
    public static FI upOneFile(HttpServletRequest reqeust) {
        FileEngine file = new FileEngine(reqeust);
        FI upOne = file.upOne(configuration.file.OfficeFileModel.class);//可以自己写一个Model 系统默认office系列小部分
        return upOne;
    }
#end
#end
}
